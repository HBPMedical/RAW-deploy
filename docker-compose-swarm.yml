#                    Copyright (c) 2016-2016
#   Data Intensive Applications and Systems Labaratory (DIAS)
#            Ecole Polytechnique Federale de Lausanne
#
#                      All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright notice
# and this permission notice appear in all copies of the software, derivative
# works or modified versions, and any portions thereof, and that both notices
# appear in supporting documentation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. THE AUTHORS AND ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE
# DISCLAIM ANY LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE
# USE OF THIS SOFTWARE.

version: '2'
# the following environment variables are expected to be available when running 
# docker-compose up
# - swarm_node: The name of the cluster node where to deploy
# - raw_data_root: The folder containing the data on the swarm node host
# - docker_data_folder: Where to map the data folder WITHIN the containers
# - raw_admin_static: Nginx directory for the static pages and ressources
# - raw_admin_conf: Nginx configuration directory
# - raw_admin_log: Nginx directory for the logs

networks:
  net-local:
    external:
      name: "${swarm_node}/mip_net-local"
  net-federation:
    driver: overlay

services:

  SWARMNODE-RawEngine:
    image: "sambuc/hbp-raw-engine"
    container_name: "${swarm_node}-raw-engine"
    restart: unless-stopped
    networks:
     - "net-local"
    expose:
     - "54321"
    environment:
     - "constraint:node==${swarm_node}"
    volumes:
     - "${raw_data_root}:${docker_data_folder}:ro"

  SWARMNODE-RawSniffer:
    image: "sambuc/hbp-raw-sniffer"
    container_name: "${swarm_node}-raw-sniffer"
    restart: unless-stopped
    networks:
     - "net-local"
    environment:
     - "constraint:node==${swarm_node}"
    expose:
     - "5555"
    volumes:
     - "${raw_data_root}:${docker_data_folder}:ro"
    links:
     - "SWARMNODE-RawEngine:raw-engine"

  SWARMNODE-RawAdvisor:
    image: "google/cadvisor:latest"
    container_name: "${swarm_node}-raw-cadvisor"
    restart: unless-stopped
    networks:
     - "net-local"
    environment:
     - "constraint:node==${swarm_node}"
    expose:
     - "8080"
    volumes:
     - "/:/rootfs:ro"
     - "/var/run:/var/run:rw"
     - "/sys:/sys:ro"
     - "/var/lib/docker/:/var/lib/docker:ro"

  SWARMNODE-RawAdmin:
    image: "sambuc/hbp-raw-admin"
    container_name: "${swarm_node}-raw-admin"
    restart: unless-stopped
    networks:
     - "net-local"
    environment:
     - "constraint:node==${swarm_node}"
    ports:
     - "80:80"
    volumes:
     - "${raw_admin_static}:/usr/share/nginx/html:ro"
     - "${raw_admin_conf}:/etc/nginx:ro"
     - "${raw_admin_log}:/var/log/nginx:rw"
    links:
     - "SWARMNODE-RawEngine:raw-engine"
     - "SWARMNODE-RawSniffer:raw-sniffer"
     - "SWARMNODE-RawAdvisor:raw-cadvisor"
