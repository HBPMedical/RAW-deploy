#                    Copyright (c) 2016-2016
#   Data Intensive Applications and Systems Labaratory (DIAS)
#            Ecole Polytechnique Federale de Lausanne
#
#                      All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright notice
# and this permission notice appear in all copies of the software, derivative
# works or modified versions, and any portions thereof, and that both notices
# appear in supporting documentation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. THE AUTHORS AND ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE
# DISCLAIM ANY LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE
# USE OF THIS SOFTWARE.

version: '2'
# the following environment variables are expected to be available when running
# docker-compose up
# - swarm_node: The name of the cluster node where to deploy
# - raw_data_root:      The folder containing the data files (CSV, json,...) on the
#                       swarm node host. Mapped to /datasets WITHIN the containers
# - pg_data_root:       The folder containing the PostgreSQL binary tables on the
#                       swarm node host. Mapped to /data WITHIN the containers
# - raw_admin_conf:     Nginx configuration file
# - raw_admin_htpasswd: .htpasswd configuration file
# - raw_admin_log:      Nginx directory for the logs

networks:
  net-local:
    external:
      name: "${swarm_node}/mip_net-local"
  net-federation:
    driver: overlay

services:

  SWARMNODE-RawEngine:
    image: "hbpmip/postgresraw"
    container_name: "${swarm_node}-raw-engine"
    restart: unless-stopped
    networks:
     - "net-local"
    expose:
     - "5432"
    environment:
     - "constraint:node==${swarm_node}"
    volumes:
     - "${raw_data_root}:/datasets:ro"
     - "${pg_data_root}:/data:rw"
    environment:
     - POSTGRES_PORT
     - POSTGRES_USER
     - POSTGRES_PASSWORD
     - POSTGRES_DB=mip

  SWARMNODE-RawUI:
    image: "hbpmip/postgresraw-ui"
    container_name: "${swarm_node}-raw-ui"
    restart: unless-stopped
    networks:
     - "net-local"
    environment:
     - "constraint:node==${swarm_node}"
    expose:
     - "5555"
    volumes:
     - "${raw_data_root}:/datasets:ro"
     - "${pg_data_root}:/data:rw"
    links:
     - "SWARMNODE-RawEngine:raw-engine"
    environment:
     - POSTGRES_HOST=raw-engine
     - POSTGRES_PORT
     - POSTGRES_USER
     - POSTGRES_PASSWORD
     - POSTGRES_DB=mip

#  SWARMNODE-RawAdvisor:
#    image: "google/cadvisor:latest"
#    container_name: "${swarm_node}-raw-cadvisor"
#    restart: unless-stopped
#    networks:
#     - "net-local"
#    environment:
#     - "constraint:node==${swarm_node}"
#    expose:
#     - "8080"
#    volumes:
#     - "/:/rootfs:ro"
#     - "/var/run:/var/run:rw"
#     - "/sys:/sys:ro"
#     - "/var/lib/docker/:/var/lib/docker:ro"

  SWARMNODE-RawAdmin:
    image: "library/nginx:alpine"
    container_name: "${swarm_node}-raw-admin"
    restart: unless-stopped
    networks:
     - "net-local"
    environment:
     - "constraint:node==${swarm_node}"
    ports:
     - "80:80"
    volumes:
     - "${raw_admin_htpasswd}:/etc/nginx/.htpasswd:ro"
     - "${raw_admin_conf}:/etc/nginx/nginx.conf:ro"
     - "${raw_admin_log}:/var/log/nginx:rw"
    links:
     - "SWARMNODE-RawUI:raw-ui"
#    - "SWARMNODE-RawAdvisor:raw-cadvisor"
